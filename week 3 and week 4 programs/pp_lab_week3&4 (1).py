# -*- coding: utf-8 -*-
"""pp_lab_week3&4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YtgdqSEu1-e9n1pga7iYvI5MLVjD65a9

Week 3 programs
"""

#1 i
import numpy as np
list=[1,2,3,4,5,6,7,8]
print("list to array:")
print(np.asarray(list))
tuple=([8,4,6],[1,2,3])
print("tuple to array:")
print(np.asarray(tuple))

#1 ii
import numpy as np
array1=np.array([0,10,20,40,60])
print("array1:",array1)
array2=[10,20,30]
print("array2:",array2)
print("common value between two arrays:")
print(np.intersect1d(array1,array2))

#2
def gcd(x,y):
  while(y):
    x,y=y,x%y
  return abs(x)
x,y=[int(a) for a in input("enter two numbers:").split()] 
print("the gcd of x and y is:",end="")  
print(gcd(x,y))

#3
def palindrome(str):
  for i in range(0,int(len(str)/2)):
    if str[i]!=str[len(str)-i-1]:
      return False
  return True
str=input("enter a string:")    
print(palindrome(str))

"""Week-4 programs"""

#1
def is_sorted(user_list):
  return user_list==sorted(user_list)
user_list=input("enter the list:")
user_list=user_list.split()
print(is_sorted(user_list))
print("your list:",user_list)

#2
def has_duplicates(source):
  return len(set(source))!=len(source)
source=input("enter the list:")
source=source.split()
print(has_duplicates(source))

# 2 i
def remove(duplicate):
  final_list=[]
  for num in duplicate:
    if num not in final_list:
      final_list.append(num)
  return final_list 
duplicate=[2,4,10,20,5,2,20,4]
print(remove(duplicate))

#2 ii
def append_singlewords(file_name,singlewords):
  withopen(file_name,"a+")as file_object:
    appendEOL=False
    file_object.seek(0)
    data=file_object.read(100)
    if len(data)>0:
      appendEOL=True
    for line in singlewords:
      if appendEOL==True:
        file_object.write("\n")
      else:
        appendEOL=True
      file_object.write(line)

#2 iii
old_dict=['A':67,'B':23,'C':45,'D':56,'E':12,'F':69,'G':67,'H':23]
new_dict=dict([(value,key) for key,value in old_dict.items()])
print("original dictionary is:")
print(old_dict)
print()
print("The dictionary after swappig:")
print("key:values")
for i in new_dict:
  print(i,":",new_dict)

#3 i
n=input("enter a string:")
x=[]
for i in n:
  x.append(i)
print(",".join(n))

#3 ii
print("enter a string:")
text=input()
print("enter a word to delete:")
word=input()
text=text.replace(word,"")
print()
print(text)

#3 iii
import re
def convert_to_uppercase(a):
  return a.group(1)+a.group(2).upper()
s=input("enter a string:")
result=re.sub("(^|\s)(\S)",convert_to_uppercase,s)
print(result)

#4
def printTheArray(arr, n):
	for i in range(0, n):
		print(arr[i], end = " ")	
	print()
def generateAllBinaryStrings(n, arr, i):
	if i == n:
		printTheArray(arr, n)
		return
	arr[i] = 0
	generateAllBinaryStrings(n, arr, i + 1)
	arr[i] = 1
	generateAllBinaryStrings(n, arr, i + 1)
# Driver Code
if __name__ == "__main__":
	n = int(input("enter the value of n:"))
	arr = [None] * n
	generateAllBinaryStrings(n, arr, 0)